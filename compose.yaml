# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  auth-service:
    build: ./backend/auth-service
    ports:
      - 8001:8000
    environment:
      - AUTH_SERVICE_PORT=8000
      - AUTH_SERVICE_HOST=auth-service
      # thêm các biến DB
      - MYSQL_DATABASE=crmgozic
      - MYSQL_USER=apiuser
      - MYSQL_PASSWORD=apipassword
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
    depends_on:
      - db
    command: python manage.py runserver 0.0.0.0:8000
  db:
    image: mysql:8
    container_name: crmgozic-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: crmgozic
      MYSQL_USER: apiuser
      MYSQL_PASSWORD: apipassword
    volumes:
      - db-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    expose:
      - "3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 3306:3306
  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: db
    ports:
      - 8080:8080
  frontend:
    build: ./frontend
    ports:
      - 4200:4200
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=production
    depends_on:
      - auth-service
    command: ng serve --host 0.0.0.0 --port 4200
secrets:
  db-password:
    file: db/password.txt
volumes:
  db-data:

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
#     depends_on:
#       db:
#         condition: service_healthy



